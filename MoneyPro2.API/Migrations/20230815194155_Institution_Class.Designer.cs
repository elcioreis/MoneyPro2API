// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyPro2.API.Data;

#nullable disable

namespace MoneyPro2.API.Migrations
{
    [DbContext(typeof(MoneyPro2DataContext))]
    [Migration("20230815194155_Institution_Class")]
    partial class Institution_Class
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyPro2.API.Models.Institution", b =>
                {
                    b.Property<int>("InstituicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstituicaoId"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Apelido");

                    b.Property<bool?>("Ativo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasColumnName("Ativo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Descricao");

                    b.Property<int>("TipoInstituicaoId")
                        .HasColumnType("INT")
                        .HasColumnName("TipoInstituicaoId");

                    b.Property<int>("UserId")
                        .HasColumnType("INT")
                        .HasColumnName("UserId");

                    b.HasKey("InstituicaoId");

                    b.HasIndex("TipoInstituicaoId");

                    b.HasIndex(new[] { "UserId", "Apelido" }, "IX_Instituicao_UserId_Apelido")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "UserId", "Apelido" }, "IX_Instituicao_UserId_Apelido"), false);

                    b.HasIndex(new[] { "UserId", "TipoInstituicaoId", "Apelido" }, "IX_Instituicao_UserId_TipoInstituicaoId_Apelido")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "UserId", "TipoInstituicaoId", "Apelido" }, "IX_Instituicao_UserId_TipoInstituicaoId_Apelido"), false);

                    b.ToTable("Instituicao", (string)null);
                });

            modelBuilder.Entity("MoneyPro2.API.Models.InstitutionType", b =>
                {
                    b.Property<int>("TipoInstituicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoInstituicaoId"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Apelido");

                    b.Property<bool?>("Ativo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIT")
                        .HasColumnName("Ativo")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Descricao");

                    b.Property<int>("UserId")
                        .HasColumnType("INT")
                        .HasColumnName("UserId");

                    b.HasKey("TipoInstituicaoId");

                    b.HasIndex(new[] { "UserId", "Apelido" }, "IX_TipoInstituicao_UserId_Apelido")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "UserId", "Apelido" }, "IX_TipoInstituicao_UserId_Apelido"), false);

                    b.ToTable("TipoInstituicao", (string)null);
                });

            modelBuilder.Entity("MoneyPro2.API.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Criptografada")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("CHAR")
                        .HasColumnName("PasswordHash");

                    b.Property<bool>("EmailVerificado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("UserName");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Username" }, "IX_User_Username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("MoneyPro2.API.Models.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LoginTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("LoginTime")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("INT")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId", "LoginTime" }, "IX_UserLogin_UserId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "UserId", "LoginTime" }, "IX_UserLogin_UserId"), false);

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("MoneyPro2.API.Models.Institution", b =>
                {
                    b.HasOne("MoneyPro2.API.Models.InstitutionType", "InstitutionType")
                        .WithMany("Institutions")
                        .HasForeignKey("TipoInstituicaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("FK_Instituicao_TipoInstituicao_TipoInstituicaoId");

                    b.HasOne("MoneyPro2.API.Models.User", "User")
                        .WithMany("Institutions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Instituicao_User_UserId");

                    b.Navigation("InstitutionType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyPro2.API.Models.InstitutionType", b =>
                {
                    b.HasOne("MoneyPro2.API.Models.User", "User")
                        .WithMany("InstitutionTypes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_TipoInstituicao_User_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyPro2.API.Models.User", b =>
                {
                    b.OwnsOne("MoneyPro2.API.ValueObjects.CPF", "CPF", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Conteudo")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("CHAR")
                                .HasColumnName("CPF");

                            b1.HasKey("UserId");

                            b1.HasIndex("Conteudo")
                                .IsUnique()
                                .HasDatabaseName("IX_User_CPF");

                            SqlServerIndexBuilderExtensions.IsClustered(b1.HasIndex("Conteudo"), false);

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("MoneyPro2.API.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("VARCHAR")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.HasIndex("Address")
                                .IsUnique()
                                .HasDatabaseName("IX_User_Email");

                            SqlServerIndexBuilderExtensions.IsClustered(b1.HasIndex("Address"), false);

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("CPF")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();
                });

            modelBuilder.Entity("MoneyPro2.API.Models.UserLogin", b =>
                {
                    b.HasOne("MoneyPro2.API.Models.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_UserLogin_User_UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MoneyPro2.API.Models.InstitutionType", b =>
                {
                    b.Navigation("Institutions");
                });

            modelBuilder.Entity("MoneyPro2.API.Models.User", b =>
                {
                    b.Navigation("InstitutionTypes");

                    b.Navigation("Institutions");

                    b.Navigation("UserLogins");
                });
#pragma warning restore 612, 618
        }
    }
}
